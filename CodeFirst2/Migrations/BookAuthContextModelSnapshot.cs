// <auto-generated />
using System;
using CodeFirstEmptyController.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirst2.Migrations
{
    [DbContext(typeof(BookAuthContext))]
    partial class BookAuthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirstEmptyController.Models.Author", b =>
                {
                    b.Property<int>("AuthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthId"));

                    b.Property<string>("AuthName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthId = 11,
                            AuthName = "Bravo"
                        },
                        new
                        {
                            AuthId = 12,
                            AuthName = "Marco"
                        });
                });

            modelBuilder.Entity("CodeFirstEmptyController.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("PublicationYear")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthId = 11,
                            Price = 4000m,
                            PublicationYear = new DateOnly(2020, 8, 12),
                            Title = "Dj Bravoooo"
                        },
                        new
                        {
                            BookId = 2,
                            AuthId = 12,
                            Price = 11111m,
                            PublicationYear = new DateOnly(2023, 3, 30),
                            Title = "The Devilll"
                        });
                });

            modelBuilder.Entity("CodeFirstEmptyController.Models.Book", b =>
                {
                    b.HasOne("CodeFirstEmptyController.Models.Author", "author")
                        .WithMany("Books")
                        .HasForeignKey("AuthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("author");
                });

            modelBuilder.Entity("CodeFirstEmptyController.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
